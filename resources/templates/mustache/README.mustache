# {{projectName}}

{{moduleName}} - JavaScript client for {{projectName}}
{{#appDescription}}
{{{appDescription}}}
{{/appDescription}}
This SDK is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

- API version: {{appVersion}}
- Package version: {{projectVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Build package: {{generatorClass}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

### For [Node.js](https://nodejs.org/)

#### npm

To publish the library as a [npm](https://www.npmjs.com/),
please follow the procedure in ["Publishing npm packages"](https://docs.npmjs.com/getting-started/publishing-npm-packages).

Then install it via:

```shell
npm install {{{projectName}}} --save
```

#### git
#
If the library is hosted at a git repository, e.g.
https://github.com/{{#gitUserId}}{{.}}{{/gitUserId}}{{^gitUserId}}YOUR_USERNAME{{/gitUserId}}/{{#gitRepoId}}{{.}}{{/gitRepoId}}{{^gitRepoId}}{{projectName}}{{/gitRepoId}}
then install it via:

```shell
npm install {{#gitUserId}}{{.}}{{/gitUserId}}{{^gitUserId}}YOUR_USERNAME{{/gitUserId}}/{{#gitRepoId}}{{.}}{{/gitRepoId}}{{^gitRepoId}}{{projectName}}{{/gitRepoId}} --save
```

## Getting Started

Please follow the [installation](#installation) instruction and execute the following JS code:

### Usage scenarios
#### Using the Client class with the configuration passed through environment variables

```javascript
const {{{moduleName}}} = require('{{{projectName}}}');
const Client = require('{{{projectName}}}/src/Api/Client');

let client = new Client();
let assetApi = client.assetApi;

let asset = AssetFactory.create(); // your own implementation of an asset factory that sets at least the mandatory properties
let createAssetResult = assetApi.createAsset(asset);

createAssetResult.then(data => {
    console.log(data);
}, reason => {
    console.error(reason);
});

```

#### Authentication environment variables:
- SFMC_AUTH_BASE_URL
- SFMC_CLIENT_ID
- SFMC_CLIENT_SECRET
- SFMC_ACCOUNT_ID
- SFMC_SCOPE (space-separated list of data-access permissions for your application - optional parameter)

#### Transactional Messaging integration tests environment variables:
- SFMC_COUNTRY_CODE
- SFMC_KEYWORD
- SFMC_SHORT_CODE


#### Using the Client class with the configuration passed through a configuration object

```javascript
const {{{moduleName}}} = require('{{{projectName}}}');
const Client = require('{{{projectName}}}/src/Api/Client');

const config = {
    authBaseUrl: 'YOUR AUTH BASE URL',
    clientId: 'YOUR CLIENT ID',
    clientSecret: 'YOUR CLIENT SECRET',
    accountId: 'YOUR ACCOUNT ID',
    scope: 'SPACE-SEPARATED LIST OF DATA-ACCESS PERMISSIONS FOR YOUR APPLICATION' // optional parameter
};

// Transactional Messaging integration tests config parameters:

config.shortCode = 'YOUR SHORT CODE';
config.keyWord = 'YOUR KEY WORD';
config.countryCode = 'YOUR COUNTRY CODE';

let client = new Client(config);
let assetApi = client.assetApi;

let asset = AssetFactory.create(); // your own implementation of an asset factory that sets at least the mandatory properties
let createAssetResult = assetApi.createAsset(asset);

createAssetResult.then(data => {
    console.log(data);
}, reason => {
    console.error(reason);
});

```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{moduleName}}.{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{moduleName}}.{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}